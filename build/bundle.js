!function(n){function r(e){if(t[e])return t[e].exports;var i=t[e]={i:e,l:!1,exports:{}};return n[e].call(i.exports,i,i.exports,r),i.l=!0,i.exports}var t={};r.m=n,r.c=t,r.d=function(n,t,e){r.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:e})},r.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(t,"a",t),t},r.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},r.p="",r(r.s=0)}([function(module,exports,__webpack_require__){var main=__webpack_require__(1),common=__webpack_require__(2),inx=__webpack_require__(3),pro=__webpack_require__(5),fw=__webpack_require__(12),wap=__webpack_require__(17),essay=__webpack_require__(19);if(__webpack_require__(21),__webpack_require__(22),/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)){$("body").html("");var html='<div style="width:100%;height:100%;position:absolute;top:0;z-index: 100;background-color: #2A2B2F;"><div style="width:80%;height:10%;position:absolute;left:50%;top:50%;margin-left:-40%;margin-top:-25%;text-align:center;animation:myalert 0.5s ease-in;-webkit-animation:myalert 0.5s ease-in;animation-fill-mode:forwards;-webkit-animation-fill-mode:forwards;"><div style="padding: 50px; line-height: 22px; background-color: #393D49; color: #fff; font-weight: 300;">非常抱歉，实在缺乏时间来支持移动端，请用PC访问</div></div></div>';$("body").append(html)}else setTimeout(function(){$("#loading .prog div").animate({width:"99%"}),setTimeout(function(){$("#root").html(main),$(".pwh-header-img").attr("src","http://ofad4ydvw.bkt.clouddn.com/io/pwh.png"),common.myalert("本站所诉内容仅为本人观点，欢迎探讨！","moveImg"),$("#pro,#fw,#wap,#essay").click(function(){$(this).addClass("pwh-this"),$(this).parent().siblings().children().removeClass("pwh-this")}),$("#inx").click(function(){$("#pro,#fw,#wap,#essay").removeClass("pwh-this")}),eval(common.gethash()+".render()"),Router.route("",function(){inx.render()}),Router.route("pro",function(){pro.render()}),Router.route("fw",function(){fw.render()}),Router.route("wap",function(){wap.render()}),Router.route("essay",function(){essay.render()})},1500)},3e3)},function(n,r){n.exports='<div class="pwh-layout">\r\n    <input type="hidden" name="isFirst" value="1">\r\n    <div class="pwh-header">\r\n        <a href="#" id="inx"><img class="pwh-header-img"></a>\r\n        <span style="font-weight:600;color: #9e9e9e">The Relentless Pursuit of Perfection</span>\r\n        <ul class="pwh-header-nav">\r\n            <li class="pwh-nav-item">\r\n                <a href="#pro" id="pro">JS疑难</a>\r\n            </li>\r\n            <li class="pwh-nav-item">\r\n                <a href="#fw" id="fw">前端框架</a>\r\n            </li>\r\n            <li class="pwh-nav-item">\r\n                <a href="#wap" id="wap">移动端</a>\r\n            </li>\r\n            <li class="pwh-nav-item">\r\n                <a href="#essay" id="essay">随笔</a>\r\n            </li>\r\n            <span class="pwh-nav-bar" style="left: 382px; top: 55px; width: 0px; opacity: 0;"></span>\r\n        </ul>\r\n    </div>\r\n    <div class="pwh-body-left-shadow">\r\n        <div>\r\n            <h1>前端求生</h1>\r\n            <h4>蒲文豪</h4>\r\n        </div>\r\n    </div>\r\n    <div class="pwh-body pwh-body-left">\r\n        <div class="bar l-t"></div>\r\n        <div class="bar l-b"></div>\r\n        <div class="pwh-body-content-left">\r\n            <div class="pwh-inx-left">\r\n                <img class="mine">\r\n                <h2 style="margin-top: 100px;"></h2>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="pwh-body pwh-body-right">\r\n        <div class="bar r-t"></div>\r\n        <div class="bar r-b"></div>\r\n        <div class="pwh-body-content-right">\r\n        </div>\r\n    </div>\r\n    \x3c!--     <div class="pwh-footer">\r\n    </div> --\x3e\r\n</div>'},function(module,exports){module.exports={myalert:function(o,fun){var _this=this,html='<div style="width:100%;height:100%;position:absolute;top:0;z-index: 100;background-color: #2A2B2F;"><div style="width:20%;height:10%;position:absolute;left:50%;top:-30%;margin-left:-10%;margin-top:-5%;animation:myalert 0.5s ease-in;-webkit-animation:myalert 0.5s ease-in;animation-fill-mode:forwards;-webkit-animation-fill-mode:forwards;"><div style="padding: 50px; line-height: 22px; background-color: #393D49; color: #fff; font-weight: 300;">'+o+'</div><div class="pwh-alert-btn"><a class="pwh-alert-btn0" href="javascript:;">确定</a></div></div></div>';$("body").append(html),$(".pwh-alert-btn0").click(function(){$(this).parent().parent().parent().hide(),void 0!=fun&&eval("_this."+fun+"()")})},moveImg:function(){$(".pwh-body-left-shadow div h1").attr("style","animation:title 0.3s ease-out;-webkit-animation:title 0.3s ease-out;animation-fill-mode: forwards;-webkit-animation-fill-mode: forwards;"),$(".pwh-body-left-shadow div h4").attr("style","animation:names 0.5s ease-out;-webkit-animation:names 0.5s ease-out 1s;animation-fill-mode: forwards;-webkit-animation-fill-mode: forwards;"),$(".pwh-body-left-shadow").attr("style","animation: book2 2s linear 1.8s;-webkit-animation: book2 2s linear 1.8s;animation-fill-mode: forwards;-webkit-animation-fill-mode: forwards;"),$(".pwh-body-left").attr("style","animation: book1 2s linear 1.8s;-webkit-animation: book1 2s linear 1.8s;animation-fill-mode: forwards;-webkit-animation-fill-mode: forwards;"),setTimeout(function(){$(".pwh-body-left").addClass("setindex")},2800),$(".pwh-inx-header img").attr("style","animation:skake 4s ease-in;-webkit-animation:shake 4s ease-in;");for(var n=0;n<5;n++){var r=["200px","190px","150px","150px","90px"],t=r[n],e=parseInt(1e3*(n+4));!function(n,r,t){setTimeout(function(){$(".ins-prog").eq(n).animate({width:r},"slow")},t)}(n,t,e)}$("input[name=isFirst]").val(0)},gethash:function(){var n=location.hash.slice(1);return""==n&&(n="inx"),n}}},function(n,r,t){var e=t(4);n.exports={render:function(){$(".pwh-inx-left img").attr("src","http://ofad4ydvw.bkt.clouddn.com/io/mine.jpg"),$(".pwh-inx-left h2").html("珍爱前端，远离IE"),$(".pwh-body-content-right").html(e),$("#pro,#fw,#wap,#essay").parent().removeClass("pwh-this"),this.bind()},bind:function(){if(0==$("input[name=isFirst]").val())for(var n=0;n<5;n++){var r=["200px","190px","150px","150px","90px"],t=r[n],e=parseInt(500*(n+4));!function(n,r,t){setTimeout(function(){$(".ins-prog").eq(n).animate({width:r},"slow")},t)}(n,t,e)}$(".mine").attr("src","http://ofad4ydvw.bkt.clouddn.com/io/mine.jpg"),console.log("您在首页！")}}},function(n,r){n.exports='<div class="pwh-inx-instuction">\r\n        <h2>个人简介</h2>\r\n        <p class="ins-item"><span class="ins-item-name">姓名：</span>蒲文豪</p>\r\n        <p class="ins-item"><span class="ins-item-name">年龄：</span>24</p>\r\n        <p class="ins-item">\r\n            <span class="ins-item-name">涉及领域：</span>\r\n            </br><span class="ins-list">Html5,Css3,Javascript</span><span class="ins-prog"></span>\r\n            </br><span class="ins-list">Yeoman,Gulp,Webpack/Browserify</span><span class="ins-prog"></span>\r\n            </br><span class="ins-list">React</span><span class="ins-prog"></span>\r\n            </br><span class="ins-list">Canvas/Svg</span><span class="ins-prog"></span>\r\n            </br><span class="ins-list">PHP/MySql</span><span class="ins-prog"></span>\r\n        </p>\r\n        <p class="ins-item">\r\n            <span class="ins-item-name">工作经历： </span>\r\n            </br><span class="ins-list" style="width: 100%">2016.10-2017.5&nbsp;&nbsp;&nbsp;Camera360 Web前端工程师</span>\r\n            </br><span class="ins-list" style="width: 100%">2017.8-至今&nbsp;&nbsp;&nbsp;迅游科技 Web前端工程师</span>\r\n        </p>\r\n        <p class="ins-item">\r\n            <span class="ins-item-name">联系方式： </span>\r\n            </br><span class="ins-list" style="width: 100%">邮箱：&nbsp;&nbsp;&nbsp;phaoer@sina.cn</span>\r\n            </br><span class="ins-list" style="width: 100%">WeChat：&nbsp;&nbsp;&nbsp;HolyShitPo</span>\r\n        </p>\r\n</div>'},function(n,r,t){var e=t(6),i=t(7),o=t(8),a=t(9),s=t(10),p=t(11);n.exports={render:function(){$(".pwh-inx-left img").attr("src","http://ofad4ydvw.bkt.clouddn.com/io/pro.jpg"),$(".pwh-inx-left h2").html("JS疑难"),$(".pwh-body-content-right").html(e),$("#pro").addClass("pwh-this"),this.bind()},bind:function(){var n=this,r=new showdown.Converter,t=r.makeHtml(i),e=r.makeHtml(o),l=r.makeHtml(a),l=r.makeHtml(s),l=r.makeHtml(p);$(".back").click(function(){n.render()}),$(".pwh-pro-list li a").click(function(){"pro1"==$(this).attr("class")?$(".pwh-pro-list").html(t):"pro2"==$(this).attr("class")?$(".pwh-pro-list").html(e):"pro3"==$(this).attr("class")?$(".pwh-pro-list").html(l):"pro4"==$(this).attr("class")?$(".pwh-pro-list").html(html4):"pro5"==$(this).attr("class")&&$(".pwh-pro-list").html(html5)}),console.log("您在JS疑难版块")}}},function(n,r){n.exports='<button class="back">返回目录</button>\r\n<div class="pwh-list pwh-pro-list">\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="pro1">Ajax 跨域请求</a><p>如今大都要用到跨域的方法请求数据，网上的方法也是各式各样，这里我重点介绍两种不同的跨域形式。</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="pro2">JS 混杂点-变量定义与闭包</a><p>js定义变量大家都知道是用var，这个var如果在全局，他可有可无，但是如果在函数内部那么就有点不一样了。</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="pro3">我和IE有个约会</a><p>主要是更新一些关于IE兼容性的问题 </p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="pro4">JS原生监听滚动条</a><p>页面中间某个部分能随着鼠标滚动而滚动，且不显示滚动条。</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="pro5">JS作用域</a><p>都知道JS存在三种作用域，即全局，函数，块级。其实是没有块级作用域的，但我们可以通过闭包来实现它。</p>\r\n\t\t</li>\r\n\t</ul>\r\n</div>\r\n<script type="text/javascript">$("#loading").hide()<\/script>'},function(n,r){n.exports='如今大都要用到跨域的方法请求数据，网上的方法也是各式各样，这里我重点介绍两种不同的跨域形式。\r\n##一.跨域请求接口\r\n>主要介绍两种jquery的方式\r\n####1.$.getJSON\r\n>此方法简单粗暴，如果你对ajax还算了解，推荐使用此方法，一步搞定。\r\n\r\n      $.getJSON("http://xxxxxxxxxxx/xxxxxxxx/xxxxxx/list?callback=?","name=zhangsan&id=10",function (json){})\r\n这个方法jquery会自动判断是否跨域，如果跨域，则jquery会以jQuery1345xxxxxxxxxxx的形式自动填充callback，并按照需求返回数据到回调函数：（如图）\r\n![](http://upload-images.jianshu.io/upload_images/7003250-4cb723b335920817?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n第二个部分传递的data可以按照官方格式（也就是name=xx&id=xx）来传递，也可以以json形势传递。\r\n####2.$.ajax\r\n>这个方法为什么放到第二个来说？主要是涉及到的几个参数需要与第一种方法对比解释：\r\n    \r\n    $.ajax({\r\n          url:"http://xxxxxxxxxxxxxxx",    //首先是url这里写上要跨域请求的地址\r\n          type:"get",                                //必须是get，目前跨域只支持get方法。\r\n          datatype:"jsonp",\r\n          jsonp:"mycallback", //这个jsonp是什么意思？看到第一种方法的callback没？如果你不设置jsonp，那么默认回调函数参数就是callback，但是最好别改，因为这是向服务器发送请求的函数参数名（其实就是回调函数名），服务端拿到该参数名后以"mycallback({\\"userid\\":0,\\"username\\":\\"null\\"})"的形式返回给客户端数据\r\n          jsonpcallback:"mycallback",//这里的jsonpcallback就是回调函数名，我在第一种方法中说道过，使用getJSON时，回调函数的名字由query自动填充，如果设置了就是按照你的名字返回。\r\n          success:function(json){    \r\n         //do something   \r\n         }\r\n    })\r\n\r\n##二.跨域请求文件\r\n>有些时候我们可能需要跨域请求一些文件，那么这个时候就没有后端的童鞋给你合作，显然我们jQuery请求接口的方式不起作用了。那么这个时候就需要用到咱们jsonp跨域的的原理了。\r\n####1.jsonp本质\r\n>是通过script标签请求数据，然后返回的数据再用一个函数来包装。\r\n####2.jsonp原理\r\n>因为咱们的src是没有跨域的限制的，所以我们通过script标签跨域请求资源的原理来间接的请求数据。\r\n###Code\r\n    <!DOCTYPE html>\r\n    <html lang="en">\r\n    <head>\r\n\t    <meta charset="UTF-8">\r\n\t    <title>Jsonp Test</title>\r\n    </head>\r\n    <body>\r\n\t    <script type="text/javascript">\r\n\t\t\t    function getData(data){\r\n\t\t\t\t    console.log(data.name);\r\n\t\t\t    }\r\n\t    <\/script>\r\n    </body>\r\n    <script type="text/javascript" src="test.json"><\/script>\r\n    </html>\r\n>这里我们定义了一个getData的方法，来获取咱们src读取的资源，相当于请求成功的回调函数。\r\n###test.json Code\r\n    getData({"name":"pwh","sex":"23"})\r\n>这里咱们用getData把数据包装起来，齐活儿！\r\n执行上述代码，即可实现咱们利用jsonp原理请求文件！'},function(n,r){n.exports="##一.前言\r\n>都知道JS存在三种作用域，即全局，函数，块级。其实是没有块级作用域的，但我们可以通过闭包来实现它。\r\n##二.函数作用域\r\n>很好理解，在函数内部声明的变量在函数调用后会销毁\r\n##三.块级作用域\r\n在if，while，for等代码体用{}包括的，成为块级作用域，但是在JS中没这说法。\r\n比如\r\n\r\n      <script>\r\n          for(var i=0;i<10;i++)\r\n          {\r\n              console.log(i);\r\n          }\r\n          alert(i)   //    9\r\n      <\/script>\r\n问题出来了，按理说正常情况是控制台输出0~9，弹出undefined，但是alert出来的却是9，\r\n>那这足以说明咱们的JS是不存在块级作用域的，块里面的变量是被挂载在window上的。\r\n\r\n那么这会引发一个问题，看下面代码：\r\n\r\n      var arrs=[];\r\n      <script>\r\n          for(var i=0;i<10;i++)\r\n          {\r\n              arrs[i]=function(){\r\n                   console.log(i);\r\n              }\r\n          }\r\n          arrs[0]   //   9\r\n          arrs[1]   //   9\r\n          ..........\r\n      <\/script>\r\n\r\n这里你不管执行 第几个函数都是打印9，原因有两个，第一因为JS中不存在块级作用域，i的声明是挂载在window上的，再一个，函数在执行的时候获取到的i为循环最后一次+1的i，所以恒定为9。\r\n解决办法：利用闭包虚构一个块级作用域，并将i的值传入。\r\n \r\n     var arrs=[];\r\n      <script>\r\n          for(var i=0;i<10;i++)\r\n          {\r\n             (function(i){\r\n                 arrs[i]=function(){\r\n                      console.log(i);\r\n                 }\r\n             })(i)  //将循环的i的值传入\r\n          }\r\n          arrs[0]   //   0\r\n          arrs[1]   //   1\r\n          ..........\r\n      <\/script>\r\n\r\n此时当函数执行的时候会拿到这个立即执行函数的i的值，而立即执行函数的值是for循环传入的，所以就能正常输出0~9。"},function(n,r){n.exports='>如题：主要是更新一些关于IE兼容性的问题\r\n##1.动态引入JS时onload的兼容\r\n>实际开发过程中经常遇到需要动态的去加载某个js，然后再执行一系列的操作，这里便涉及到如果我们需要操作dom的方法或者数据包含在该js文件中，那么我们就需要在js文件onload后再进行dom的操作。\r\n\r\n动态引入js的方法（原生）：\r\n\r\n     var oHead = document.getElementsByTagName(\'head\')[0];\r\n\r\n     var oScript = document.createElement("script");\r\n\r\n     oScript.setAttribute("type", "text/javascript");\r\n\r\n     oScript.setAttribute("src", "https://news.xunyou.com/service/lite.js?id=" + Math.random());\r\n\r\n     oScript.setAttribute("id", "myjs");\r\n\r\n     oHead.appendChild(oScript);\r\n\r\nonload：\r\n     \r\n     //Chrome,Firefox（onload方法在IE中不会被执行）\r\n     oScript.onload = oScript.onerror = function(t) {\r\n        if (t.type == "load") {\r\n               //do something\r\n        }\r\n     }\r\n\r\nonreadystatechange：\r\n     \r\n     //IE\r\n     oScript.onreadystatechange = function() {\r\n        var r = oScript.readyState;\r\n        if (r === \'loaded\' || r === \'complete\') {\r\n               //do something\r\n        }\r\n     }\r\n\r\n##2.z-index在IE7下的遮挡问题\r\n>IE7下面并列的父级的z-index决定了父级下面子集的z-index，若父级1的z-index为1，父级2的z-index为2.则父级1的子集的z-index再高也会被父级2所遮挡。\r\n\r\n解决办法：很简单，避免多个并列父级，将要置顶显示的元素公用一个父级。\r\n#The Relentless Pursuit of Perfection 持续更新中'},function(n,r){n.exports='##一.情景\r\n>需求：页面中间某个部分能随着鼠标滚动而滚动，且不显示滚动条。\r\n##二.思路\r\n>如果只是考虑webkit内核那就没说的了，有css属性可以设置。但往往只有移动端开发才能这么霸道\r\n今天说的是兼容IE/Chrome/FireFox等主流浏览器的做法。\r\n\r\n你需要三个div即可实现，最外层div设置你需要显示的高宽以及overflow为hidden，第二层设置overflow-x。并将其宽度设置来超出最外层div，这样咱们的滚动条就会被在外层div所挡住，也就间接隐藏了滚动条也能滚动\r\n####code\r\n     <!DOCTYPE html>\r\n     <html lang="en">\r\n\r\n     <head>\r\n         <meta charset="UTF-8">\r\n         <title>Document</title>\r\n         <style type="text/css">\r\n         * {\r\n               margin: 0;\r\n               padding: 0;\r\n           }\r\n\r\n           body {\r\n               font: 14px/1.8 \'Microsoft YaHei\', \'微软雅黑\';\r\n               color: #ffffff;\r\n               text-align: center;\r\n          }\r\n\r\n          .content {\r\n               width: 947px;\r\n               height: 543px;\r\n               margin: 98px auto 0;\r\n               position: relative;\r\n               overflow: hidden;\r\n         }\r\n\r\n         .content-outer {\r\n              width: 968px;\r\n              height: 543px;\r\n              overflow-x: hidden;\r\n              overflow-y: auto;\r\n        }\r\n    </style>\r\n    </head>\r\n\r\n    <body>\r\n         <div class="content">\r\n            <div class="content-outer">\r\n                 <div class="content-inner">\r\n                     \x3c!-- 你的内容 --\x3e\r\n                </div>\r\n            </div>\r\n         </div>\r\n    </body>\r\n\r\n    </html>\r\n\r\n以上便实现了滚动条隐藏且能滚动\r\n\r\n##三.监听鼠标滚轮事件\r\n这里IE/Chrome的用法是一致的，滚动事件onmousewheel，判断滚动属性为e.wheelDelta，且向上滚动是+120，向下是-120\r\n而FireFox滚动事件DOMMouseScroll，判断滚动属性为e.detail，且向上是-3，向下是+3\r\n\r\n这里需要兼容处理一下下。\r\n\r\n    var Fun= function(e) {\r\n        var e = e || window.event;\r\n         if (e.wheelDelta) {    \r\n            //IE/Opera/Chrome \r\n            console.log(e.wheelDelta);\r\n        } else if (e.detail) {\r\n            //FireFox\r\n            console.log(e.detail);\r\n        }\r\n    }\r\n    if (document.addEventListener) {\r\n        document.addEventListener(\'DOMMouseScroll\', Fun, false);\r\n    } //FireFox\r\n    window.onmousewheel = document.onmousewheel = Fun; //IE/Opera/Chrome \r\n'},function(n,r){n.exports="##一.前言\r\n>都知道JS存在三种作用域，即全局，函数，块级。其实是没有块级作用域的，但我们可以通过闭包来实现它。\r\n##二.函数作用域\r\n>很好理解，在函数内部声明的变量在函数调用后会销毁\r\n##三.块级作用域\r\n在if，while，for等代码体用{}包括的，成为块级作用域，但是在JS中没这说法。\r\n比如\r\n\r\n      <script>\r\n          for(var i=0;i<10;i++)\r\n          {\r\n              console.log(i);\r\n          }\r\n          alert(i)   //    9\r\n      <\/script>\r\n问题出来了，按理说正常情况是控制台输出0~9，弹出undefined，但是alert出来的却是9，\r\n>那这足以说明咱们的JS是不存在块级作用域的，块里面的变量是被挂载在window上的。\r\n\r\n那么这会引发一个问题，看下面代码：\r\n\r\n      var arrs=[];\r\n      <script>\r\n          for(var i=0;i<10;i++)\r\n          {\r\n              arrs[i]=function(){\r\n                   console.log(i);\r\n              }\r\n          }\r\n          arrs[0]   //   9\r\n          arrs[1]   //   9\r\n          ..........\r\n      <\/script>\r\n\r\n这里你不管执行 第几个函数都是打印9，原因有两个，第一因为JS中不存在块级作用域，i的声明是挂载在window上的，再一个，函数在执行的时候获取到的i为循环最后一次+1的i，所以恒定为9。\r\n解决办法：利用闭包虚构一个块级作用域，并将i的值传入。\r\n \r\n     var arrs=[];\r\n      <script>\r\n          for(var i=0;i<10;i++)\r\n          {\r\n             (function(i){\r\n                 arrs[i]=function(){\r\n                      console.log(i);\r\n                 }\r\n             })(i)  //将循环的i的值传入\r\n          }\r\n          arrs[0]   //   0\r\n          arrs[1]   //   1\r\n          ..........\r\n      <\/script>\r\n\r\n此时当函数执行的时候会拿到这个立即执行函数的i的值，而立即执行函数的值是for循环传入的，所以就能正常输出0~9。"},function(n,r,t){var e=t(13),i=t(14),o=t(15),a=t(16);n.exports={render:function(){$(".pwh-inx-left img").attr("src","http://ofad4ydvw.bkt.clouddn.com/io/fw.jpg"),$(".pwh-inx-left h2").html("前端框架"),$(".pwh-body-content-right").html(e),$("#fw").addClass("pwh-this"),this.bind()},bind:function(){var n=this,r=new showdown.Converter,t=r.makeHtml(i),e=r.makeHtml(o),s=r.makeHtml(a);$(".back").click(function(){n.render()}),$(".pwh-fw-list li a").click(function(){"fw1"==$(this).attr("class")?$(".pwh-fw-list").html(t):"fw2"==$(this).attr("class")?$(".pwh-fw-list").html(e):"fw3"==$(this).attr("class")&&$(".pwh-fw-list").html(s)}),console.log("您在前端框架版块")}}},function(n,r){n.exports='<button class="back">返回目录</button>\r\n<div class="pwh-list pwh-fw-list">\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="fw1">React之ReFlux</a><p>React 对于一个标准的React Web应用，它的UI将会由无数个组件（component）嵌套组合而成，React是一种自上而下的渲染方式，数据传递到父组件，然后父...</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="fw2">Redux初析</a><p>你可能不需要Redux，那就别瞎搞！！！Redux 的适用场景：多交互、多数据源。</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="fw3">用Yeoman + gulp + webpack 来管理你的前端项目</a><p>快速搭建前端开发环境，优化工作流~</p>\r\n\t\t</li>\r\n\t</ul>\r\n</div>'},function(n,r){n.exports="##一.React\r\n对于一个标准的React Web应用，它的UI将会由无数个组件（component）嵌套组合而成，React是一种自上而下的渲染方式，数据传递到父组件，然后父组件传递给它的各个子组件，就这样一级一级自上而下地传递下去，从而完成UI的渲染。也就因此有了上一篇父组件，子组件之间的通信。\r\n>然而React仅仅是一个View\r\n\r\n如果我们在渲染过程中数据发生变化，显然光是view是无法做到的。\r\n最早是Flux来解决这一问题，后面衍生到ReFlux的出现，这里主要是说ReFlux。\r\n##二.ReFlux\r\n>同样是单项数据流\r\n同样有actions和stores\r\nstores监听action\r\n\r\n当执行操作的时候触发某个actions的方法，然后携带着数据参数传递到stroes中，stores执行ajax请求更新数据，更新成功后，还是通过事件机制传递到list当中，并更新UI。\r\n\r\n    var ReportAction = Reflux.createActions([\r\n        'getAll'\r\n    ]);\r\n    var TodoStore=Reflux.createStore({\r\n        listenables:[ReportAction],\r\n        items:[],\r\n        onGetAll:function(data){\r\n            $.getJSON(\"http://xxxxxxxxxx/xxxxxx/xxx/xxxxx/xxxxx?callback=?\", data, function (response) {\r\n                console.log(response);\r\n                this.items.unshift(response.data.list);\r\n                this.trigger(this.items[0]);\r\n            }.bind(this));\r\n        }\r\n    });\r\n\r\n>上面是一个比较常见的Reflux的应用，在store里面我们采用listenables来监听actions。得到最新数据后调用trigger方法将数据传递到绑定的list中。\r\n\r\n\r\n>下面代码中我们采用mixins中Reflux.connect来直接获得最新数据，只需调用trigger数据就会自动更新到我们state指定的属性list上。当然还有Reflux.listenTo或者Reflux.connectFilter来接收新数据，这里不再一一赘述。\r\n\r\n      var TodoComponent=React.createClass({\r\n        mixins: [Reflux.connect(TodoStore,'list')],\r\n        getInitialState:function(){\r\n            return {list:[],num:''}\r\n        },\r\n        onChangeText:function(ev){\r\n            //this.setState({text:ev.target.value});\r\n            //最新的refs获取标签不需要getDOMNode()了\r\n            this.setState({num:this.refs.reftext.value})\r\n        },\r\n        onGetAll:function(){\r\n            var data={num:this.state.num};\r\n            ReportAction.getAll(data);\r\n            this.setState({num:''})\r\n        },\r\n\r\n        render:function(){\r\n            return (\r\n                    <div>\r\n                        <input type=\"text\" value={this.state.num} onChange={this.onChangeText}  ref=\"reftext\" />\r\n                        <button onClick={this.onGetAll}>查询</button>\r\n                   </div>\r\n            );\r\n        }\r\n    });\r\n\r\n    ReactDOM.render(<TodoComponent />,document.getElementById('app'));\r\n\r\n\r\n\r\n\r\n\r\n"},function(n,r){n.exports='##一.前言\r\n>你可能不需要Redux，那就别瞎搞！！！\r\nRedux 的适用场景：多交互、多数据源。\r\n\r\n##二.简介\r\n三个点：action，view，state。\r\n\r\n在Redux中 一个 State 对应一个 View。只要 State 相同，View 就相同。而且State 是View导致的。\r\n\r\n简单的来说就是用户接触不到State ，只能在View的层面，操作View通过Action发出通知，从而改变State。\r\n\r\n当Store 收到 Action 以后，会返回一个新的 State，来改变View。这个过程就叫做 Reducer，且它是一个函数，是一个[纯函数](http://blog.csdn.net/hongweigg/article/details/44035283)\r\n\r\n>重要：Action只是通知我要改变了，而Reducer才是告诉你怎么去改变，告诉你怎么做才符合社会主义核心价值观，告诉你怎么才无愧于一个当代青年人。\r\n\r\n很多人会误解，Redux？？？？    React的兄弟吧。当然react-redux是一种正确的打开方式，但并不是唯一，Redux这个King也可以用于Vue。\r\n\r\n##三.MiddleWare\r\n实际项目中涉及到很多异步操作，那么在Redux要实现异步，得依靠中间键，中间键如果是非必须的话尽量使用现成的中间键。自己造轮子。。。。。。。。。。你懂得~\r\n\r\n一般我们要想添加其他功能选择是在发送Action的时候添加，那就是我们的store.dispatch方法上做文章。\r\n但是store.dispatch作为Action的载体只能接受一个对象，我们添加不了其他功能。\r\n\r\n这里就需要用到redux-thunk中间键。\r\n\r\n使用方法：命令行在目录下执行：cnpm install --save redux-thunk\r\n\r\n      import thunk from \'redux-thunk\';\r\n使用过后store.dispatch这个方法可以接受一个函数作为参数，ok，可以搞事了！\r\n废话不多说\r\n实践才是检验真理的唯一标准。\r\n\r\n这里只是很简略的介绍了Redux，基本的使用方法请参照[Redux中文网](http://cn.redux.js.org/)  \r\n\r\n##四.React-Redux\r\n在React-Redux中所有组件分为UI组件（presentational component）和容器组件（container component）两大类\r\nUI 组件负责 UI 的呈现，容器组件负责管理数据和逻辑\r\n\r\n另外React-Redux 提供connect方法，用于从 UI 组件生成容器组件\r\n\r\nconnect方法有两个参数mapStateToProps和mapDispatchToProps\r\n>mapStateToProps：映射Redux state到组件的属性 \r\nmapDispatchToProps：映射Redux actions到组件的属性\r\n\r\n当容器组件生成过后React-Redux提供了<Provider>组件，让容器组件拿到state。然后在将根组件包起来，这样所有的根组件就能够拿到state了。\r\n像这样：\r\n    \r\n    ReactDOM.render(  \r\n    <Provider store={store}>  \r\n        <App />  \r\n    </Provider>,  \r\n    document.getElementById(\'root\')  \r\n    )  \r\n##五.Do it\r\n使用webpack来构建\r\n\r\n>package.json\r\n\r\n\r\n     {\r\n        "scripts": {\r\n        "start": "webpack",\r\n        "dev": "webpack --watch"\r\n        },\r\n        "devDependencies": {\r\n        "babel-core": "^6.26.0",\r\n        "babel-loader": "^7.1.2",\r\n        "babel-preset-es2015": "^6.24.1",\r\n        "babel-preset-react": "^6.24.1",\r\n        "css-loader": "^0.28.7",\r\n        "style-loader": "^0.19.0",\r\n        "webpack": "^3.6.0"\r\n        },\r\n        "dependencies": {\r\n        "react": "^15.6.2",\r\n        "react-dom": "^15.6.2",\r\n        "react-redux": "^5.0.3",\r\n        "react-router": "^4.0.0",\r\n        "redux": "^3.6.0",\r\n        "redux-thunk": "^2.2.0"\r\n        }\r\n    }\r\n\r\n>项目目录：\r\n\r\n![1.png](http://upload-images.jianshu.io/upload_images/7003250-8d3d00fc23959a6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n这里建议将action和reducer分离开来，因为项目较大的话，你可能会有很多种不同的action或者reducer，方便后期维护。\r\n\r\n>main.js\r\n    \r\n    import React, { Component } from \'react\';  \r\n\r\n    import ReactDOM from \'react-dom\';  \r\n\r\n    import { createStore , applyMiddleware} from \'redux\';  \r\n\r\n    import { Provider, connect } from \'react-redux\';\r\n\r\n    import thunk from \'redux-thunk\';\r\n\r\n    import * as actions from \'./actions.js\'; \r\n\r\n    import reducer from \'./reducer.js\'; \r\n\r\n    import Top from \'./common/Top.js\';\r\n\r\n    import Content from \'./common/Content.js\' \r\n\r\n    require(\'./main.css\');\r\n\r\n    class App extends Component{  \r\n        render() {  \r\n            const {onGetDataClick,list} = this.props;\r\n            let name = "XXX系统";  \r\n            return (  \r\n                <div>  \r\n                    <Top name={name} />\r\n                    <button onClick={onGetDataClick}>Get</button>\r\n                    <Content data={list} />\r\n                </div>  \r\n            );  \r\n        }  \r\n    }  \r\n  \r\n    let store = createStore(reducer,applyMiddleware(thunk));        //使用中间键\r\n  \r\n    function mapStateToProps(state) {          //将Redux state映射到组件的属性\r\n        return { \r\n                 list : state.list\r\n               }  \r\n    }  \r\n  \r\n    function mapDispatchToProps(dispatch){         //定义事件的action\r\n        return{  \r\n            onGetDataClick:()=>dispatch(actions.getDataAction),  \r\n        }  \r\n    }  \r\n  \r\n    App = connect(mapStateToProps, mapDispatchToProps)(App)   //绑定到App组件\r\n  \r\n    ReactDOM.render(  \r\n        <Provider store={store}>  \r\n            <App />  \r\n        </Provider>,  \r\n        document.getElementById(\'root\')  \r\n    )  \r\n\r\n>actions.js\r\n\r\n    const getDataAction = (dispatch) => {  \r\n        $.ajax({\r\n        \turl:"xxxxxxxxxxxxxxxxxxxxxxxx",\r\n        \ttype:"post",\r\n        \tdataType:"json",\r\n        \tdata:{},\r\n        \tsuccess:function(res){\r\n                       dispatch({type:"RES_SUCCESS",data:data})\r\n        \t}，\r\n            error:function(){\r\n                      dispatch({type:"RES_ERROR"})\r\n            },\r\n            compelet:function(){\r\n                      dispatch({type:"RES_COMPELET"})\r\n           }\r\n        })\r\n    }  \r\n    export {getDataAction}\r\n\r\n这里我们dispatch第一次执行咱们的请求，根据不同状态再发送Action来触发 Reducer \r\n\r\n>reducer.js\r\n    \r\n    const initialState = {  \r\n        list:[] \r\n    } \r\n\r\n    export default (state = initialState, action) => {  \r\n        switch (action.type) {  \r\n            case \'RES_ERROR\':  \r\n                return {  \r\n                     list:"Error"\r\n                }  \r\n            case \'RES_COMPELET\':  \r\n                return {  \r\n                     list:"Compelet"\r\n                } \r\n            case \'RES_SUCCESS\':\r\n                return {\r\n                    list:action.data\r\n                } \r\n            default:  \r\n                return initialState;  \r\n        }  \r\n    }\r\n\r\nReduce中我们接收到一个Action，然后返回一个State，然后映射到组件的属性上，实现View的更新\r\n\r\n>Content.js\r\n\r\n    import React, {Component} from \'react\';\r\n\r\n    export default class extends Component{\r\n    render() {\r\n        return (\r\n          <div className="content">\r\n              <table id="managelist">\r\n                <thead>\r\n                  <tr> //此处不可省略tr，不然react会抛出警告\r\n                      <th>XXX</th>\r\n                      <th>XXX</th>\r\n                      <th>XXX</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.data.map(function(item,index){\r\n                     return (\r\n                            ...............................\r\n                    )})}\r\n                </tbody>\r\n              </table> \r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n>粗略介绍，前路漫漫。\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'},function(n,r){n.exports="##一. 前言\r\n>Yeoman：前端脚手架，快速搭建前端开发环境，优化工作流~\r\nGulp：工程化构建工具，基于task来处理任务\r\nWebpack：最常见的前端构建工具，类似与gulp，但不如gulp灵活，专注于代码打包编译\r\n\r\nOK，主人公们介绍完了，该篇主要说明三个工具的基本用法，安装配置自己解决。\r\n\r\n##二. Yeoman\r\n>Q:\r\ni.在写东西的时候经常会遇到一些重复性的操作和代码，苦于Ctrl+c\r\nii.人数较多的前端团队10个人拥有十种代码风格，十种项目结构，后期维护及其繁琐\r\n\r\n——使用Yeoman 达到One Code Style One Directory Structure\r\n\r\n####1.安装:\r\n\r\n    $ cnpm install -g yo\r\n\r\n####2.使用：\r\n    yeoman 提供很多generator，可以直接使用\r\n\r\n    $ mkdir project-name\r\n    $ cd project-name\r\n    $ yo\r\n    \r\n按照提示选择需要的模板就行了，这里主要说一说怎么私人订制~~~嘻嘻\r\n\r\n####3.创建自己的generator\r\nyeoman官方提供了generator-generator 来帮助我们自定义生成器，良心啊~~~\r\n\r\n    $ cnpm install -g generator-generator\r\n    $ yo generator\r\n\r\n然后你的根目录下就会生成如下结构：\r\n![1.png](https://upload-images.jianshu.io/upload_images/7003250-a1d9f03710779de9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n我们需要做的就是在index.js中来创造我们自己的generator\r\n     \r\n     'use strict';\r\n     const Generator = require('yeoman-generator');\r\n     const chalk = require('chalk');\r\n     const yosay = require('yosay');\r\n\r\n     module.exports = class extends Generator {\r\n     prompting() {\r\n          // Have Yeoman greet the user.\r\n         this.log(\r\n         yosay(`Welcome to the tiptop ${chalk.red('generator-xy')} generator!`)\r\n     );\r\n\r\n    const prompts = [\r\n      {\r\n        type: 'confirm',\r\n        name: 'someAnswer',\r\n        message: 'Would you like to enable this option?',\r\n        default: true\r\n      }\r\n    ];\r\n\r\n    return this.prompt(prompts).then(props => {\r\n      // To access props later use this.props.someAnswer;\r\n      this.props = props;\r\n    });\r\n    }\r\n\r\n    writing() {\r\n     this.fs.copy(\r\n       this.templatePath('dummyfile.txt'),\r\n       this.destinationPath('dummyfile.txt')\r\n     );\r\n    }\r\n\r\n    install() {\r\n      this.installDependencies();\r\n     }\r\n    };\r\n\r\n可以看到核心的流程是在一个继承了generator的类当中\r\n其实这里generator一共提供了 initializing，prompting，configuring，default，writing，conflicts，install，end这几个函数\r\n>Prompting()方法是执行前的过渡，实现与用户的交互，你可以在prompts问题集中定义一些问题，比如你叫啥，干啥，弄啥，家里几口人，人均几亩地...........然后将用户输入的内容保存在this.props中，方便以后调用。\r\n\r\n我们自己来写一个\r\n\r\n    prompting() {\r\n          // Have Yeoman greet the user.\r\n         this.log(\r\n         yosay(`Welcome to the tiptop ${chalk.red('generator-xy')} generator!`)\r\n     );\r\n    return this.prompt([{\r\n      type    : 'input',\r\n      name    : 'appname',\r\n      message : 'input your project  name',\r\n      default : this.appname     \r\n    }\r\n    ]).then((answers) => {\r\n      this.log('appname ：', answers.appname);\r\n      this.props = answers;\r\n    })\r\n    }\r\n\r\n在后面的方法中，我们便可以通过this.props.appname来获取到输入的项目名称\r\n\r\n我们在原来的基础上定义一个defaults方法来生成用户输入的目录\r\n\r\n    const path = require('path');\r\n    const mkdirp = require('mkdirp');\r\n\r\n    defaults () {           \r\n    if (path.basename(this.destinationPath()) !== this.props.appname) { //判断是否存在该目录\r\n      this.log(\r\n        'Your generator must be inside a folder named ' + this.props.appname + '\\n' +\r\n        'I\\'ll automatically create this folder.'\r\n      );\r\n      mkdirp(this.props.appname); // 即 mkdir -p 创建该目录\r\n      this.destinationRoot(this.destinationPath(this.props.appname));\r\n    }\r\n    }\r\n\r\nwriting方法用来书写创建工程文件的步骤\r\n在这之前我们首先在template文件夹下创建一个public目录，里面创建如下文件作为咱们这个初级教程的全部内容\r\n![2.png](https://upload-images.jianshu.io/upload_images/7003250-9e439c836dee1404.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n开始写writing方法\r\n\r\n    writing() {\r\n    mkdirp('css');      //创建css文件夹\r\n    mkdirp('js');      //创建js文件夹\r\n    this.fs.copy(     //调用方法将模板的内容创建到根目录\r\n      this.templatePath('public/index.html'),       //模板文件地址 \r\n      this.destinationPath('index.html'),          //创建在根目录\r\n    ),\r\n\r\n    this.fs.copy(\r\n      this.templatePath('public/index.css'),\r\n      this.destinationPath('css/index.css')\r\n    );\r\n\r\n    this.fs.copy(\r\n      this.templatePath('public/index.js'),\r\n      this.destinationPath('js/index.js')\r\n    );\r\n  }\r\n\r\n最后install方法，官方的api说的很清楚this.installDependencies()，即是用来安装我们项目依赖的\r\n\r\n    install() {\r\n      this.npmInstall(['jquery'], { 'save-dev': true });\r\n    }\r\n\r\n这里就安装一个jquery作为说明即可。\r\n最后我们在根目录执行\r\n\r\n     $ npm link\r\n这样我们就可以在全局使用该generator了\r\n然后切换到开发目录，执行\r\n      \r\n     $ yo xy\r\n\r\n按照步骤，最后我们生成的开发目录的结构如下\r\n\r\n![3.png](https://upload-images.jianshu.io/upload_images/7003250-3fe52643c1bf9f34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n然后你就可以开始编码了，so easy今后所有这种类型的项目一个命令几秒钟就可以开始愉快的编码，而且代码风格统一~~~\r\n\r\n##三.  Gulp+Webpack\r\n>这里把Gulp和Webpack放到一起来说。\r\n博主最早是只用了webpack来构建自己的项目，后来加入Gulp对其进行整合，发现配合食用，口感更佳呀\r\n核心依然是plugin\r\n\r\n####!Webpack出口文件即Gulp入口文件\r\n\r\n这里也只是讲如何写一个初略的gulpfile.js\r\n\r\n核心便是task,src,start,watch等api，详细说明见官网[Gulp Api](https://www.gulpjs.com.cn/docs/api/)\r\n基本工作流程：\r\ni. 通过gulp.src()方法获取到我们想要处理的文件流([Vinyl files](https://github.com/wearefractal/vinyl-fs) 的 [stream](http://nodejs.org/api/stream.html))，\r\nii. 把文件流通过pipe方法导入到gulp的插件中进行处理，比如调用concat方法合并所有css，再调用minify()压缩css。（具体插件用法，[npm官网](https://www.npmjs.com/)均有介绍）\r\niii. 把处理后的流再通过pipe方法导入到gulp.dest()中，最后把流中的内容写入到文件中\r\n\r\n项目结构\r\n     ![4.png](https://upload-images.jianshu.io/upload_images/7003250-b2ebfec4ee375661.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n####gulpfile.js\r\n\r\n    //加载外挂：自动瞄准，无后座，锁血，大挪移.......~~~\r\n    var gulp = require('gulp'),\r\n    minify=require('gulp-minify-css');\r\n    autoprefixer = require('gulp-autoprefixer'),\r\n    jshint = require('gulp-jshint'),\r\n    uglify = require('gulp-uglify'),\r\n    imagemin = require('gulp-imagemin'),\r\n    clean = require('gulp-clean'),\r\n    concat = require('gulp-concat'),\r\n    notify = require('gulp-notify'),\r\n    cache = require('gulp-cache'),\r\n    livereload = require('gulp-livereload'),\r\n    fileinclude = require('gulp-file-include'),\r\n    webpack = require('gulp-webpack');\r\n\r\n    gulp.task('css', function() {\r\n    gulp.src('src/css/*.css')\r\n        .pipe(concat('main.css'))\r\n        .pipe(minify())\r\n        .pipe(gulp.dest('dist/css'));\r\n    })\r\n\r\n    gulp.task('scripts', function() {\r\n    return gulp.src('src/entry.js')\r\n      .pipe(webpack( require('./webpack.config.js') ))\r\n      .pipe(gulp.dest('dist/js'));\r\n    });\r\n\r\n    gulp.task('images', function() {\r\n    return gulp.src('src/images/**/*')\r\n      .pipe(cache(imagemin({ optimizationLevel: 3, progressive: true, interlaced: true })))\r\n      .pipe(gulp.dest('dist/images'))\r\n      .pipe(notify({ message: 'Images compile complete' }));\r\n    });\r\n\r\n    gulp.task('html', function() {\r\n    return gulp.src('src/**/*.html')\r\n      .pipe(fileinclude({\r\n        prefix: '@@',\r\n        basepath: '@file'\r\n      }))\r\n      .pipe(gulp.dest('dist/'))\r\n      .pipe(notify({ message: 'html compile complete' }));\r\n    });\r\n\r\n    gulp.task('clean', function() {\r\n       return gulp.src(['dist/css', 'dist/js', 'dist/images'], {read: false})\r\n       .pipe(clean());\r\n    });\r\n\r\n    gulp.task('default', ['clean'], function() {\r\n       gulp.start('css','scripts', 'images', 'html');\r\n    });\r\n\r\n\r\n    gulp.task('watch', function() {\r\n\r\n       gulp.watch('src/css/**/*.css', ['css']);\r\n\r\n       gulp.watch('src/js/**/*.js', ['scripts']);\r\n\r\n       gulp.watch('src/images/**/*', ['images']);\r\n\r\n       gulp.watch('src/**/*.html', ['html']) ;\r\n   \r\n       livereload.listen();\r\n       gulp.watch(['dist/**']).on('change', livereload.changed);\r\n\r\n    });\r\n\r\n#####1.插件的话按需自取，这里我用的插件是包含了处理所有文件的。可以酌情增减\r\n#####2.gulp.task第一个参数为任务名，gulp task-name 即可执行对应的任务，这里需要解释的就是对于js的处理。刚才说过webpack的出口文件就是gulp的入口文件，这里我们用到了gulp-webpack包来优化。\r\n#####3.在默认任务这里执行编译之前调用gulp.clean清空上一次的编译结果\r\n#####4.这里使用了livereload插件，需要配置Chrome（美中不足，显然没有webpack-dev-server实在啊）\r\n#####5.运行\r\n     \r\n     $ gulp\r\n     $ gulp watch\r\n\r\n\r\n\r\n\r\n#The Relentless Pursuit of Perfection 持续更新中\r\n\r\n\r\n     \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    "},function(n,r,t){var e=t(18);n.exports={render:function(){$(".pwh-inx-left img").attr("src","http://ofad4ydvw.bkt.clouddn.com/io/wap.jpg"),$(".pwh-inx-left h2").html("移动端"),$(".pwh-body-content-right").html(e),$("#wap").addClass("pwh-this"),this.bind()},bind:function(){console.log("您在JS疑难版块")}}},function(n,r){n.exports='<button class="back">返回目录</button>\r\n<div class="pwh-list pwh-wap-list">\r\n\t\x3c!-- <ul>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="wap1">Ajax 跨域请求</a><p>如今大都要用到跨域的方法请求数据，网上的方法也是各式各样，这里我重点介绍两种不同的跨域形式。</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="wap2">JS 混杂点-变量定义与闭包</a><p>js定义变量大家都知道是用var，这个var如果在全局，他可有可无，但是如果在函数内部那么就有点不一样了。</p>\r\n\t\t</li>\r\n\t</ul> --\x3e\r\n\t非常抱歉，由于本站使用MarkDown语法，移动端的文章比较久远，我将尽快改写为MarkDown，更新上来。\r\n</div>'},function(n,r,t){var e=t(20);n.exports={render:function(){$(".pwh-inx-left img").attr("src","http://ofad4ydvw.bkt.clouddn.com/io/essay.jpg"),$(".pwh-inx-left h2").html("随笔"),$(".pwh-body-content-right").html(e),$("#essay").addClass("pwh-this"),this.bind()},bind:function(){console.log("您在随笔版块")}}},function(n,r){n.exports='<button class="back">返回目录</button>\r\n<div class="pwh-list pwh-essay-list">\r\n\t\x3c!-- <ul>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="essay1">Ajax 跨域请求</a><p>如今大都要用到跨域的方法请求数据，网上的方法也是各式各样，这里我重点介绍两种不同的跨域形式。</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<svg aria-hidden="true" class="octicon octicon-repo repo-icon" height="30" version="1.1" viewBox="0 0 12 16" width="20"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg><a href="javascript:;" class="essay2">JS 混杂点-变量定义与闭包</a><p>js定义变量大家都知道是用var，这个var如果在全局，他可有可无，但是如果在函数内部那么就有点不一样了。</p>\r\n\t\t</li>\r\n\t</ul> --\x3e\r\n\t非常抱歉，由于本站使用MarkDown语法，随笔的文章比较久远，我将尽快改写为MarkDown，更新上来。\r\n</div>'},function(n,r){function t(){this.routes={},this.currentUrl=""}t.prototype.route=function(n,r){this.routes[n]=r||function(){}},t.prototype.refresh=function(){var n,r=location.hash.slice(1);n=""!=r&&"pro"!=r&&"fw"!=r&&"wap"!=r&&"essay"!=r?"":r,this.currentUrl=n||"",this.routes[this.currentUrl]()},t.prototype.init=function(){window.addEventListener("hashchange",this.refresh.bind(this),!1)},window.Router=new t,window.Router.init()},function(n,r,t){var e=t(23);"string"==typeof e&&(e=[[n.i,e,""]]);var i={};i.transform=void 0;t(25)(e,i);e.locals&&(n.exports=e.locals)},function(n,r,t){r=n.exports=t(24)(!1),r.push([n.i,"html,body{\r\n    height: 100%;\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font:14px/1.8 'Microsoft YaHei','\\5FAE\\8F6F\\96C5\\9ED1';\r\n}\r\na{\r\n    color: #9e9e9e;\r\n    text-decoration: none;\r\n}\r\na:link{\r\n    color: #9e9e9e;\r\n}\r\nli{list-style-type: none;}\r\n#root{\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    position: relative;\r\n}\r\n#loading{\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n.pwh-header,.pwh-body,.pwh-footer{\r\n    overflow: hidden;\r\n}\r\n.bar{\r\n    width: 200px;\r\n    height: 20px;\r\n    background-color:#e66565;\r\n    position: absolute;\r\n}\r\n.l-t{\r\n    transform: rotate(-45deg);\r\n    -webkit-transform: rotate(-45deg);\r\n    top: 54px;\r\n    left: -36px;\r\n}\r\n.l-b{\r\n    transform: rotate(45deg);\r\n    -webkit-transform: rotate(45deg);\r\n    bottom: 54px;\r\n    left: -36px;\r\n}\r\n.r-t{\r\n    transform: rotate(45deg);\r\n    -webkit-transform: rotate(45deg);\r\n    top: 54px;\r\n    right: -36px;\r\n}\r\n.r-b{\r\n    transform: rotate(-45deg);\r\n    -webkit-transform: rotate(-45deg);\r\n    bottom: 54px;\r\n    right: -36px;\r\n}\r\n.pwh-header{\r\n    background-color: #2A2B2F;\r\n    height: 60px;\r\n    border-bottom: none;\r\n    position: relative;\r\n}\r\n.pwh-header-img{\r\n    vertical-align: bottom;\r\n    padding: 5px 20px 0 20px;\r\n    height: 45px;\r\n    width: 90px;\r\n}\r\n.pwh-header-nav{\r\n    position: absolute;\r\n    top: 0;\r\n    right: 60px;\r\n    height: 60px;\r\n    margin: 0;\r\n}\r\n.pwh-nav-item{\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    line-height: 60px;\r\n    list-style: none;\r\n    padding: 0 20px;\r\n}\r\n.pwh-nav-item a{\r\n    display: inline-block;\r\n    text-align: center;\r\n    width: 80px;\r\n    height: 56px;\r\n    font-size: 16px;\r\n}\r\n.pwh-nav-item a:hover{\r\n    color: white;\r\n    border-bottom:4px solid #e66565; \r\n}\r\n.pwh-this{\r\n    color: white;\r\n    border-bottom:4px solid #e66565; \r\n}\r\n.pwh-body{\r\n    width: 50%;\r\n    position: absolute;\r\n    top: 60px;\r\n    bottom:0;\r\n    border: 8px solid #822020;\r\n}\r\n.pwh-body-left{\r\n    background: white;\r\n    left: 0;\r\n    border-right:1px solid #929292;\r\n    transform: rotateY(-180deg);\r\n    transform-origin:top right;\r\n}\r\n.pwh-body-left-shadow{\r\n    width: 50%;\r\n    position: absolute;\r\n    top: 60px;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #822020;\r\n    transform: rotateY(0deg);\r\n    transform-origin:top left;\r\n    z-index:2;\r\n}\r\n.pwh-body-left-shadow div{\r\n    position: relative;\r\n    width: 80%;\r\n    height: 90%;\r\n    margin:5% 10% 15% 10%;\r\n    border: 1px solid #868686;\r\n    overflow: hidden;\r\n    text-align: center;\r\n}\r\n.pwh-body-left-shadow div h1\r\n{\r\n    margin-top: 15%;\r\n    color: #ffb800;\r\n    font-size: 55px;\r\n    opacity:0;\r\n}\r\n@keyframes title{\r\n    from{transform:scale(5,5);opacity:0}\r\n    to{transform:scale(1,1);opacity:1}\r\n}\r\n.pwh-body-left-shadow div h4\r\n{\r\n    margin-top: 25%;\r\n    color: #ffb800;\r\n    font-size: 20px;\r\n    opacity:0;\r\n}\r\n@keyframes names{\r\n    from{opacity:0}\r\n    to{opacity:1}\r\n}\r\n.setindex{\r\n    z-index: 3;\r\n}\r\n@keyframes book1{\r\n    from{transform: rotateY(-180deg);}\r\n    to{transform: rotateY(0deg);}\r\n}\r\n@keyframes book2{\r\n    from{transform: rotateY(0deg);}\r\n    to{transform: rotateY(180deg);}\r\n}\r\n@keyframes myalert{\r\n    from{top:-30%;}\r\n    to{top:50%;}\r\n}\r\n.pwh-body-right{\r\n    background: white;\r\n    right: 0;\r\n    border-left:none;\r\n}\r\n.pwh-body-content-left{\r\n    width:500px;\r\n    margin: auto;\r\n    height:100%; \r\n    overflow-x:hidden;\r\n    overflow-y:auto;\r\n}\r\n.pwh-body-content-right{\r\n    width:700px;\r\n    margin: auto;\r\n    height:100%; \r\n    overflow-y:auto;\r\n}\r\n.pwh-inx-left{\r\n    width: 500px;\r\n    margin: 250px auto 20px;\r\n    text-align: center;\r\n}\r\n.pwh-inx-left img{\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n}\r\n @keyframes shake{\r\n        0%, 75%{-webkit-transform: none;transform: none}\r\n        75%,78%{-webkit-transform: scale(1);transform: scale(1);}\r\n        81%,84%{-webkit-transform: scale(1.2);transform: scale(1.2);}\r\n        84%,91%{-webkit-transform: scale(1.1);transform: scale(1.1);}\r\n        91%,90%{-webkit-transform: scale(1.4);transform: scale(1.4);}\r\n        90%,100%{-webkit-transform: scale(1);transform: scale(1);}\r\n    }\r\n.pwh-inx-instuction{\r\n    width: 600px;\r\n    margin-top: 120px;\r\n    text-align: left;\r\n}\r\n.ins-item{\r\n    margin-left: 20px;\r\n}\r\n.ins-item-name{\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n}\r\n.ins-list{\r\n    display: inline-block;\r\n    width: 250px;\r\n    margin: 0 5px 0 16px;\r\n}\r\n.ins-prog{\r\n    display:inline-block;\r\n    width: 0;\r\n    height: 10px;\r\n    border-radius: 25px;\r\n    background-color: green\r\n}\r\n.pwh-list{\r\n    width: 600px;\r\n    margin-top: 60px;\r\n    text-align: left;\r\n}\r\n.back{\r\n    display: inline-block;\r\n    height: 38px;\r\n    line-height: 38px;\r\n    padding: 0 18px;\r\n    background-color: #1E9FFF;\r\n    color: #fff;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    border: none;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n    margin-top: 60px;\r\n}\r\n.pwh-list li{\r\n    margin-bottom: 50px;\r\n}    \r\n.pwh-list li p{\r\n    margin: -3px 0 0 35px;\r\n    color: #a5a5a5;\r\n    font-size: 13px;\r\n}\r\n.pwh-list a{\r\n    font-size:20px;\r\n    font-weight: 600;\r\n    color:#5588ff;  \r\n}\r\n.pwh-list a:hover{\r\n    color: #e66565;\r\n}    \r\n.pwh-list a:link{\r\n    color: #5588ff;\r\n}\r\n.pwh-list .repo-icon {\r\n    float: left;\r\n    margin-top: 2px;\r\n    margin-right: 15px;\r\n    color: #666;\r\n}\r\n.octicon {\r\n    display: inline-block;\r\n    vertical-align: text-bottom;\r\n    fill: currentColor;\r\n}\r\n/*.pwh-footer{\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 5px 0;\r\n    position: fixed;\r\n    bottom: 0;\r\n    height: 44px;\r\n    line-height: 44px;\r\n    padding: 0 15px;\r\n    background-color: #eee;\r\n    text-align: center;\r\n    color: #666;\r\n    font-weight: 300;\r\n}*/\r\n.pwh-alert-btn{\r\n    padding-top: 10px;\r\n    text-align: center;\r\n    padding: 12px 15px 12px;\r\n    pointer-events: auto;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    background-color: white;\r\n}\r\n.pwh-alert-btn a{\r\n    height: 28px;\r\n    line-height: 28px;\r\n    margin: 5px 5px 0;\r\n    padding: 0 15px;\r\n    border: 1px solid #dedede;\r\n    border-color: #1E9FFF;\r\n    background-color: #1E9FFF;\r\n    color: #fff;\r\n    border-radius: 2px;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n}",""])},function(n,r){function t(n,r){var t=n[1]||"",i=n[3];if(!i)return t;if(r&&"function"==typeof btoa){var o=e(i);return[t].concat(i.sources.map(function(n){return"/*# sourceURL="+i.sourceRoot+n+" */"})).concat([o]).join("\n")}return[t].join("\n")}function e(n){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"}n.exports=function(n){var r=[];return r.toString=function(){return this.map(function(r){var e=t(r,n);return r[2]?"@media "+r[2]+"{"+e+"}":e}).join("")},r.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var e={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(e[o]=!0)}for(i=0;i<n.length;i++){var a=n[i];"number"==typeof a[0]&&e[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),r.push(a))}},r}},function(n,r,t){function e(n,r){for(var t=0;t<n.length;t++){var e=n[t],i=m[e.id];if(i){i.refs++;for(var o=0;o<i.parts.length;o++)i.parts[o](e.parts[o]);for(;o<e.parts.length;o++)i.parts.push(c(e.parts[o],r))}else{for(var a=[],o=0;o<e.parts.length;o++)a.push(c(e.parts[o],r));m[e.id]={id:e.id,refs:1,parts:a}}}}function i(n,r){for(var t=[],e={},i=0;i<n.length;i++){var o=n[i],a=r.base?o[0]+r.base:o[0],s=o[1],p=o[2],l=o[3],c={css:s,media:p,sourceMap:l};e[a]?e[a].parts.push(c):t.push(e[a]={id:a,parts:[c]})}return t}function o(n,r){var t=v(n.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var e=w[w.length-1];if("top"===n.insertAt)e?e.nextSibling?t.insertBefore(r,e.nextSibling):t.appendChild(r):t.insertBefore(r,t.firstChild),w.push(r);else{if("bottom"!==n.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");t.appendChild(r)}}function a(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var r=w.indexOf(n);r>=0&&w.splice(r,1)}function s(n){var r=document.createElement("style");return n.attrs.type="text/css",l(r,n.attrs),o(n,r),r}function p(n){var r=document.createElement("link");return n.attrs.type="text/css",n.attrs.rel="stylesheet",l(r,n.attrs),o(n,r),r}function l(n,r){Object.keys(r).forEach(function(t){n.setAttribute(t,r[t])})}function c(n,r){var t,e,i,o;if(r.transform&&n.css){if(!(o=r.transform(n.css)))return function(){};n.css=o}if(r.singleton){var l=x++;t=g||(g=s(r)),e=h.bind(null,t,l,!1),i=h.bind(null,t,l,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=p(r),e=u.bind(null,t,r),i=function(){a(t),t.href&&URL.revokeObjectURL(t.href)}):(t=s(r),e=d.bind(null,t),i=function(){a(t)});return e(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;e(n=r)}else i()}}function h(n,r,t,e){var i=t?"":e.css;if(n.styleSheet)n.styleSheet.cssText=y(r,i);else{var o=document.createTextNode(i),a=n.childNodes;a[r]&&n.removeChild(a[r]),a.length?n.insertBefore(o,a[r]):n.appendChild(o)}}function d(n,r){var t=r.css,e=r.media;if(e&&n.setAttribute("media",e),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}function u(n,r,t){var e=t.css,i=t.sourceMap,o=void 0===r.convertToAbsoluteUrls&&i;(r.convertToAbsoluteUrls||o)&&(e=b(e)),i&&(e+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var a=new Blob([e],{type:"text/css"}),s=n.href;n.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var m={},f=function(n){var r;return function(){return void 0===r&&(r=n.apply(this,arguments)),r}}(function(){return window&&document&&document.all&&!window.atob}),v=function(n){var r={};return function(t){return void 0===r[t]&&(r[t]=n.call(this,t)),r[t]}}(function(n){return document.querySelector(n)}),g=null,x=0,w=[],b=t(26);n.exports=function(n,r){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");r=r||{},r.attrs="object"==typeof r.attrs?r.attrs:{},r.singleton||(r.singleton=f()),r.insertInto||(r.insertInto="head"),r.insertAt||(r.insertAt="bottom");var t=i(n,r);return e(t,r),function(n){for(var o=[],a=0;a<t.length;a++){var s=t[a],p=m[s.id];p.refs--,o.push(p)}if(n){e(i(n,r),r)}for(var a=0;a<o.length;a++){var p=o[a];if(0===p.refs){for(var l=0;l<p.parts.length;l++)p.parts[l]();delete m[p.id]}}}};var y=function(){var n=[];return function(r,t){return n[r]=t,n.filter(Boolean).join("\n")}}()},function(n,r){n.exports=function(n){var r="undefined"!=typeof window&&window.location;if(!r)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var t=r.protocol+"//"+r.host,e=t+r.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,r){var i=r.trim().replace(/^"(.*)"$/,function(n,r){return r}).replace(/^'(.*)'$/,function(n,r){return r});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(i))return n;var o;return o=0===i.indexOf("//")?i:0===i.indexOf("/")?t+i:e+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")"})}}]);